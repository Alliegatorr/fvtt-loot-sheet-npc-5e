# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build Project

on:
  workflow_dispatch:
  push:
    branches: [ master , Refactor-BugBear ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run test --if-present
  release:
      runs-on: ubuntu-latest
      needs: test
      steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Get JSON Version
        id: version
        uses: notiz-dev/github-action-json-property@release
            with: 
              path: 'module.json'
              prop_path: 'version'
      - name: Generate Changelog
        uses: scottbrenner/generate-changelog-action@f17b985298496cf8df35aa1104091c51e7bfea95
        env:
          REPO: ${{ github.repository }}
      - name: Prepare Module Manifest
        id: sub_manifest_link_version
        uses: microsoft/variable-substitution@v1
        with:
          files: 'module.json'
        env:
          version: ${{steps.version.outputs.prop}}
          manifest: https://github.com/${{github.repository}}/releases/latest/download/module.json
          download: https://github.com/${{github.repository}}/releases/download/v${{steps.version.outputs.prop}}/module.zip          
      - run: npm ci && npm run build --if-present          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{steps.version.outputs.prop}}
          release_name: v${{steps.version.outputs.prop}}_AngryBugbear
          draft: true
          prerelease: true
          body_path: changelog.md
      - name: Zip files
        run: |
            cd dist 
             zip -r ../lootsheetnpc5e ./* ./**/*
            cd ..
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./lootsheetnpc5e.zip
          asset_name: lootsheetnpc5e.zip
          asset_content_type: application/zip
